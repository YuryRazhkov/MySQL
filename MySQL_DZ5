/*Практическое задание по теме «Операторы, фильтрация,
 * сортировка и ограничение»

1. Пусть в таблице users поля created_at и updated_at оказались
незаполненными. Заполните их текущими датой и временем.
*/

use vk;
ALTER TABLE users ADD COLUMN created_at DATETIME; -- этих колонок у меня не было. создал пустные, чтобы соответствовало условию задачи.
ALTER TABLE users ADD COLUMN updated_at DATETIME;
update users set created_at=now();
update users set updated_at=now();

/*2. Таблица users была неудачно спроектирована. Записи created_at и
 updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо
 преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
*/


ALTER TABLE vk.users
MODIFY COLUMN created_at VARCHAR(75) null,-- сначала преобразовал в VARCHAR
MODIFY COLUMN updated_at VARCHAR(75) null;

ALTER TABLE vk.users
MODIFY COLUMN created_at DATETIME null, -- затем по условию задачи в DATETIME
MODIFY COLUMN updated_at DATETIME null;
-- ранее введенные значения не изменились.


/*В таблице складских запасов storehouses_products в поле value
 * могут встречаться самые разные цифры: 0, если товар закончился и
 * выше нуля, если на складе имеются запасы. Необходимо отсортировать
 * записи таким образом, чтобы они выводились в порядке увеличения
 * значения value. Однако нулевые запасы должны выводиться в конце,
 * после всех записей.
*/

create table storehouses_products (
id SERIAL primary key,
value bigint); -- создал таблицу

insert into storehouses_products values -- заполнил ее как в примере задаче
(1, 0),
(2, 2500),
(3, 0),
(4, 30),
(5, 500),
(6, 1);

select * from storehouses_products sp
order by CASE WHEN value = 0 then 1 else 0 end -- сортанул;
/* вывод:
2	2500
4	30
5	500
6	1
1	0
3	0


 -- Практическое задание теме «Агрегация данных»

1. Подсчитайте средний возраст пользователей в таблице users.*/

select avg(datediff(CURRENT_DATE(), birthday)/365.25) from profiles -- где-то читал, что рекомендуют делить на 365,25,
-- что бы уменьшить влияние високосных годов
-- вывод: 26.83038243

-- 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели.
-- Следует учесть, что необходимы дни недели текущего года, а не года рождения.

select DAYNAME(makedate (2021, dayofyear(birthday))), count(*)
from profiles group by (DAYNAME (makedate (2021, dayofyear(birthday))))
order by 1;
/* вывод:
Friday	62
Monday	54
Saturday	52
Sunday	47
Thursday	37
Tuesday	52
Wednesday	51
